# -------------------------------------------------- Shiny Dashboard -------------------------------------------#
options(scipen = 999)
library(shiny)
library(shinydashboard)
library(lubridate)
library(ggplot2)
library(scales)
library(forecast)
library(tseries)
library(dplyr)

sidebar = dashboardSidebar(width = 200,
                           sidebarMenu(
                             menuItem("Global View", tabName = "worldstats", icon = icon("dashboard"),badgeLabel = "Old",  badgeColor = "green"),
                             menuItem("Top5 View", tabName = "top5",icon = icon("table"),badgeLabel = "Old",  badgeColor = "green"),
                             menuItem("Top5 Incs/day View", tabName = "Increaseperday", icon = icon("list-alt"),badgeLabel = "Old", badgeColor = "green"),
                             menuItem("Indian View", tabName = "indianstats", icon = icon("dashboard"),badgeLabel = "Old", badgeColor = "green"),
                             menuItem("USA View", tabName = "usastats", icon = icon("dashboard"),badgeLabel = "New", badgeColor = "red"),
                             menuItem("Forecasts", tabName = "forecasts", icon = icon("dashboard"),badgeLabel = "New", badgeColor = "red")
                           )
)


body = dashboardBody(tabItems(
  
  #-------------------------------------------------------Tab1 Starts----------------------------------------------------#
  
  tabItem(tabName = "worldstats",
          fluidRow(
            box(title = "Total Confirmed", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;", textOutput("total_confirmed")),
            box(title = "Total Deaths", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("total_death")),
            box(title = "Total Recovered", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("total_recovered")),
            box(title = "Total Active", background= "purple",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("total_active"))
          ),
          
          fluidRow(
            box(title = "Confirmed/Day", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("total_confirmed_inc")),
            box(title = "Deaths/Day", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("total_death_inc")),
            box(title = "Recovered/Day", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("total_recovered_inc")),
            box(title = "Mortality %", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("mortality_overall"))
          ),  
          
          fluidRow(
            box(title = "Forecasting of Confirmed Cases", background= "orange",solidHeader = T, width = 6, collapsible = T,style = "font-size: 300%;",plotOutput("forecaseting_confirmed_ww")),
            box(title = "Forecasting of Death Cases", background= "orange",solidHeader = T, width = 6, collapsible = T,style = "font-size: 300%;",plotOutput("forecaseting_deaths_ww"))
          ) 
  ),
  
  #-------------------------------------------------------Tab2 Starts----------------------------------------------------#
  
  tabItem(tabName = "top5", 
          fluidRow(
            box(title = "Confirmed (Nos)", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5confirmedno")),
            box(title = "Deaths (Nos)", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5deathsno")),
            box(title = "Recovered (Nos)", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5recoveredno")),
            box(title = "Active (Nos)", background= "purple",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5activeno"))
          ),
          
          fluidRow(
            box(title = "Confirmed (%)", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5confirmedper")),       
            box(title = "Deaths (%)", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5deathsper")),
            box(title = "Recovered (%)", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5recoveredper")),
            box(title = "Active(%)", background= "purple",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5activeper"))   
          ) 
  ),
  
  
  #-------------------------------------------------------Tab3 Starts----------------------------------------------------#
  
  tabItem(tab = "Increaseperday",
          
          fluidRow( box(title = "Confirmed/day (Nos)", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5confirmed_day_no")),
                    box(title = "Deaths/day (Nos)", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5deaths_day_no")),
                    box(title = "Recovered/day (Nos)", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5recovered_day_no"))
                    
          ),
          
          fluidRow( box(title = "Confirmed/day (%)", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5confirmed_day_per")),
                    box(title = "Deaths/day (%)", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5deaths_day_per")),
                    box(title = "Recovered/day (%)", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("top5recovered_day_per"))
          )
  ),
  
  #-------------------------------------------------------Tab4 Starts----------------------------------------------------#
  
  tabItem(tabName = "indianstats", 
          fluidRow(
            box(title = "Indian Confirmed", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("indianconfirmed")),
            box(title = "Indian Deaths", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("indiandeaths")),
            box(title = "Indian Recovered", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("indianrecovered")),
            box(title = "Indian Active", background= "purple",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("indianactive"))
          ),
          
          fluidRow(
            box(title = "Confirmed/Day", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("indianconfirmed_inc")),
            box(title = "Deaths/Day", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("indiandeaths_inc")),
            box(title = "Recovered/Day", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("indianrecovered_inc")),
            box(title = "Mortality %", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("indianmortality"))
          ),
          
          fluidRow(
            box(title = "Forecasting of Confirmed Cases", background= "orange",solidHeader = T, width = 6, collapsible = T,style = "font-size: 300%;",plotOutput("forecaseting_confirmed_india")),
            box(title = "Forecasting of Death Cases", background= "orange",solidHeader = T, width = 6, collapsible = T,style = "font-size: 300%;",plotOutput("forecaseting_deaths_india"))
          )
  ),
  
  
  #-------------------------------------------------------Tab5 Starts----------------------------------------------------#
  
  tabItem(tabName = "usastats", 
          fluidRow(
            box(title = "US Confirmed", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("usconfirmed")),
            box(title = "US Deaths", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("usdeaths")),
            box(title = "US Recovered", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("usrecovered")),
            box(title = "US Active", background= "purple",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("usactive"))
          ),
          
          fluidRow(
            box(title = "Confirmed/Day", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("usconfirmed_inc")),
            box(title = "Deaths/Day", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("usdeaths_inc")),
            box(title = "Recovered/Day", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("usrecovered_inc")),
            box(title = "Mortality %", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("usmortality"))
          ),
          
          fluidRow(
            box(title = "Forecasting of Confirmed Cases", background= "orange",solidHeader = T, width = 6, collapsible = T,style = "font-size: 300%;",plotOutput("forecaseting_confirmed_us")),
            box(title = "Forecasting of Death Cases", background= "orange",solidHeader = T, width = 6, collapsible = T,style = "font-size: 300%;",plotOutput("forecaseting_deaths_us"))
          )
  ),
  
  #-------------------------------------------------------Tab6 Starts----------------------------------------------------#
  
  tabItem(tabName = "forecasts", 
          fluidRow(
            box(title = "World Confirmed Forecasts", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("worldconfirmed_forecast")),
            box(title = "World Deaths Forecasts", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("worlddeaths_forecast"))
          ),
          
          fluidRow(
            box(title = "Indian Confirmed Forecasts", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("indianconfirmed_forecast")),
            box(title = "Indian Deaths Forecasts", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("indiandeaths_forecast"))
          ),
          
          fluidRow(
            box(title = "US Confirmed Forecasts", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("usconfirmed_forecast")),
            box(title = "US Deaths Forecasts", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 150%;",tableOutput("usdeaths_forecast"))
          )
  ) 

  #-------------------------------------------------------End of Tabs----------------------------------------------------#
  
)
)


ui <- dashboardPage(skin = "blue",
                    dashboardHeader(title = span("Coronavirus Status Dashboard",style = "font-family: Arial; font-weight: bold"),titleWidth = 1800),
                    sidebar,
                    body
)

# Preview the UI in the console
server = function(input, output) {
  
  library(lubridate)
  library(ggplot2)
  library(scales)
  library(forecast)
  library(tseries)
  library(dplyr)
  
  #---------------------------------------------------------Calculations--------------------------------------------------------------#
  
  
  url = "https://raw.githubusercontent.com/datasets/covid-19/master/data/countries-aggregated.csv"
  
  data  = read.csv(url)
  
  data$Date = as_date(data$Date)

  data = arrange(data,desc(Date))
  
  data = data%>%group_by(Date,Country)%>%summarise(confirmed = sum(Confirmed),deaths=sum(Deaths),recovered = sum(Recovered))%>%arrange(desc(Date))%>%data.frame()
  
  date1 = Sys.Date() -  data[1,"Date"]
  
  #----------------------------------- Automatic Data Selection Code for Data Selection--------------------#
  
  date2 =  if (date1 == 1) {
    Sys.Date()-1
  } else {
    Sys.Date()-2
  }
  
  date3 =  if (date1 == 1) {
    Sys.Date()-2
  } else {
    Sys.Date()-3
  }
  
  data2 = data.frame(filter(data,Date==date2))
  
  data3 = data.frame(filter(data,Date==date3))
  
  data2$active = data2$confirmed - (data2$recovered+data2$deaths)
  data3$active = data3$confirmed - (data3$recovered+data3$deaths)
  
  data_merged = inner_join(data2,data3,by= "Country")
  
  # -------------------------------------------Repalcing NA with 0---------------------------------------------#
  
  data_merged$confirmed.x[is.na(data_merged$confirmed.x)] = 0
  data_merged$deaths.x[is.na(data_merged$deaths.x)] = 0
  data_merged$recovered.x[is.na(data_merged$recovered.x)] = 0
  data_merged$confirmed.y[is.na(data_merged$confirmed.y)] = 0
  data_merged$deaths.y[is.na(data_merged$deaths.y)] = 0
  data_merged$recovered.y[is.na(data_merged$recovered.y)] = 0
  
  data_merged$Date.y = NULL
  
  
  #------------------ Difference from current date to Previous date ----------#
  
  data_merged$confirmed_delta = data_merged$confirmed.x - data_merged$confirmed.y
  
  data_merged$deaths_delta =   data_merged$deaths.x - data_merged$deaths.y
  
  data_merged$recovered_delta =   data_merged$recovered.x - data_merged$recovered.y
  
  data_merged$active_delta =   data_merged$active.x - data_merged$active.y
  
  # ------------ Repalcing NA with 0 for active --------------------#
  
  data_merged$active.x[is.na(data_merged$active.x)] = 0
  data_merged$active.y[is.na(data_merged$active.y)] = 0
  #-------------------- Renaming of the Variables------------------#
  
  data_merged = rename(data_merged, Confirmed = confirmed.x, Deaths = deaths.x,Recovered = recovered.x, Active = active.x,
                       Confirmed_Incs = confirmed_delta, Deaths_Incs = deaths_delta,
                       Recovered_Incs = recovered_delta, Active_Incs = active_delta)

  #-----------------------------------------------------Confirmed Cases Starts---------------------------------#
  
  
  #------------ Total Confimed Cases-----------#
  
  
  total_confirmed = data_merged$Confirmed%>%sum()%>%comma()
  
  total_confirmed 
   
  
  #------------ Top 5 Countries Confirmed Cases No.------------#
  
  data_merged_conf_no = data_merged%>%arrange(desc(Confirmed))%>%select(Country,Confirmed)%>%head(5)
  data_merged_conf_no$Confirmed = comma(data_merged_conf_no$Confirmed)
  data_merged_conf_no  
  
  
  #------------ Top 5 Countries Confirmed Cases percentage.------------#

  data_merged_conf_pr = data_merged%>%select(Country,Confirmed)%>%mutate(Percentage = Confirmed/sum(Confirmed)*100)%>%arrange(desc(Percentage))%>%select(-c(Confirmed))%>%head(5)
  
  data_merged_conf_pr$Percentage = round(data_merged_conf_pr$Percentage,digits = 2)
  
  data_merged_conf_pr$Percentage = sprintf("%3g%%", data_merged_conf_pr$Percentage)
  
  data_merged_conf_pr
  
  
  #------------------- Total Confirmed delta no.----------------#
  
  data_merged_conf_delta_total = data_merged$Confirmed_Incs%>%sum()%>%comma()
  
  data_merged_conf_delta_total
  
  #------------------- Top 5 countries Confirmed delta no.----------------#
  
  data_merged_conf_delta_no = data_merged%>%arrange(desc(Confirmed_Incs))%>%select(Country,Confirmed_Incs)%>%head(5)
  data_merged_conf_delta_no$Confirmed_Incs = comma(data_merged_conf_delta_no$Confirmed_Incs)
  data_merged_conf_delta_no 

  
  #------------------- Top 5 countries Confirmed delta percentage.----------------#
  
  data_merged_conf_inc_per= data_merged%>%select(Country,Confirmed_Incs)%>%mutate(Percentage = Confirmed_Incs/sum(Confirmed_Incs)*100)%>%arrange(desc(Percentage))%>%select(-c(Confirmed_Incs))%>%head(5)
  
  data_merged_conf_inc_per$Percentage = round(data_merged_conf_inc_per$Percentage,digits = 2)
  
  data_merged_conf_inc_per$Percentage = sprintf("%3g%%", data_merged_conf_inc_per$Percentage)
  
  data_merged_conf_inc_per
  
  
  #-------------------------------------------------Confirmed Cases Ends--------------------------------#
  
  
  #------------------------------------------------- Deaths Cases Starts----------------------------------------#
  
  
  #--------- Total Deaths Cases---------------#
  
  total_death = data_merged$Deaths%>%sum()%>%comma()

  total_death
  
  #------------ Top 5 Countries Deaths Cases No.------------#
  
  data_merged_deaths_no = data_merged%>%arrange(desc(Deaths))%>%select(Country,Deaths)%>%head(5)
  data_merged_deaths_no$Deaths = comma(data_merged_deaths_no$Deaths)
  data_merged_deaths_no  
  
  #------------ Top 5 Countries Deaths Cases Percentage.------------#
  
  data_merged_death_pr = data_merged%>%select(Country,Deaths)%>%mutate(Percentage = Deaths/sum(Deaths)*100)%>%arrange(desc(Percentage))%>%select(-c(Deaths))%>%head(5)
  
  data_merged_death_pr$Percentage = round(data_merged_death_pr$Percentage,digits = 2)
  
  data_merged_death_pr$Percentage = sprintf("%3g%%", data_merged_death_pr$Percentage)
  
  data_merged_death_pr
  
  
  #------------------- Total deaths delta----------------#
  
  data_merged_deaths_delta_total = data_merged$Deaths_Incs%>%sum()%>%comma()
  
  data_merged_deaths_delta_total
  

  #------------------- Top 5 countries deaths delta no.----------------#
  
  data_merged_deaths_delta_no = data_merged%>%arrange(desc(Deaths_Incs))%>%select(Country,Deaths_Incs)%>%head(5)
  data_merged_deaths_delta_no$Deaths_Incs = comma(data_merged_deaths_delta_no$Deaths_Incs)
  data_merged_deaths_delta_no 
  
  #------------------- Top 5 countries deaths delta percentage.----------------#
  
  data_merged_deaths_inc_per= data_merged%>%select(Country,Deaths_Incs)%>%mutate(Percentage = Deaths_Incs/sum(Deaths_Incs)*100)%>%arrange(desc(Percentage))%>%select(-c(Deaths_Incs))%>%head(5)
  
  data_merged_deaths_inc_per$Percentage = round(data_merged_deaths_inc_per$Percentage,digits = 2)
  
  data_merged_deaths_inc_per$Percentage = sprintf("%3g%%", data_merged_deaths_inc_per$Percentage)
  
  data_merged_deaths_inc_per
  
  #---------------------------------------------------------Deaths Cases Ends----------------------------------#
  
  
  #-------------------------------------Recovered Cases Starts-----------------------------#
  
  #--------- Total Recovered Cases---------------#
  
  total_recovered = data_merged$Recovered%>%sum()%>%comma()
  
  total_recovered
  
  #------------ Top 5 Countries Recovered Cases No.------------#
  
  data_merged_recovered_no = data_merged%>%arrange(desc(Recovered))%>%select(Country,Recovered)%>%head(5)
  data_merged_recovered_no$Recovered = comma(data_merged_recovered_no$Recovered)
  data_merged_recovered_no
  
  #------------ Top 5 Countries Recovered Cases Percentage ------------#
  
  data_merged_recovered_pr = data_merged%>%select(Country,Recovered)%>%mutate(Percentage = Recovered/sum(Recovered)*100)%>%arrange(desc(Percentage))%>%select(-c(Recovered))%>%head(5)
  
  data_merged_recovered_pr$Percentage = round(data_merged_recovered_pr$Percentage,digits = 2)
  
  data_merged_recovered_pr$Percentage = sprintf("%3g%%", data_merged_recovered_pr$Percentage)
  
  data_merged_recovered_pr
  
  #------------------- Total Recovered delta----------------#
  
  data_merged_recovered_delta_total = sum(data_merged$Recovered_Incs)%>%comma()
  
  data_merged_recovered_delta_total
  
  #------------------- Top 5 countries Recovered delta no.----------------#
  
  data_merged_recovered_delta_no = data_merged%>%arrange(desc(Recovered_Incs))%>%select(Country,Recovered_Incs)%>%head(5)
  data_merged_recovered_delta_no$Recovered_Incs = comma(data_merged_recovered_delta_no$Recovered_Incs)
  data_merged_recovered_delta_no
  
  #------------------- Top 5 countries Recovered delta percentage.----------------#
  
  data_merged_recovered_inc_per= data_merged%>%select(Country,Recovered_Incs)%>%mutate(Percentage = Recovered_Incs/sum(Recovered_Incs)*100)%>%arrange(desc(Percentage))%>%select(-c(Recovered_Incs))%>%head(5)
  
  data_merged_recovered_inc_per$Percentage = round(data_merged_recovered_inc_per$Percentage,digits = 2)
  
  data_merged_recovered_inc_per$Percentage = sprintf("%3g%%", data_merged_recovered_inc_per$Percentage)
  
  data_merged_recovered_inc_per
  
  #--------------------------------------- Recovered Cases Ends--------------------------#
  
  
  #--------------------------------------- Active Cases Cases Ends--------------------------------#
  
  total_active = data_merged$Active%>%sum()%>%comma()
  
  total_active

  #------------ Top 5 Countries Active Cases No.------------#

  data_merged_active_no = data_merged%>%arrange(desc(Active))%>%select(Country,Active)%>%head(5)
  data_merged_active_no$Active = comma(data_merged_active_no$Active)
  data_merged_active_no
  
  #------------ Top 5 Countries Active Cases Percentage.------------#
  
  
  
  data_merged_active_pr = data_merged%>%select(Country,Active)%>%mutate(Percentage = Active/sum(Active)*100)%>%arrange(desc(Percentage))%>%select(-c(Active))%>%head(5)
  
  data_merged_active_pr$Percentage = round(data_merged_active_pr$Percentage,digits = 2)
  
  data_merged_active_pr$Percentage = sprintf("%3g%%", data_merged_active_pr$Percentage)
  
  data_merged_active_pr
  #-------------------------------------Mortality %-----------------------------#
  
  #Overall %
  
  Mortality_Overall = round(sum(data_merged$Deaths)/(sum(data_merged$Confirmed))*100,digits = 2)
  
  Mortality_Overall = sprintf("%3g%%",Mortality_Overall)
  
  Mortality_Overall 
  
  #----------------------------------------- India Analytics-----------------------------#
  
  
  data4 = filter(data2, Country=="India")
  
  data5 = filter(data3, Country=="India")
  
  
  #---------------------- Confirmed Cases--------------------------------#
  
  Indian_Confirmed = data4$confirmed%>%sum()%>%comma()
  
  #---------------------- Deaths Cases--------------------------------#
  
  Indian_Deaths = data4$deaths%>%sum()%>%comma()
  
  #----------------------- Recovered Cases-------------------------#
  
  Indian_Recovered = data4$recovered%>%sum()%>%comma()
  
  #----------------------- Active Cases----------------------------#
  
  Indian_Active = data4$active%>%sum()%>%comma()
  
  Indian_Confirmed_Increase = (data4$confirmed - data5$confirmed)%>%comma()
  
  Indian_Deaths_Increase = (data4$deaths - data5$deaths)%>%comma()
  
  Indian_Recovered_Increase = (data4$recovered - data5$recovered)%>%comma()
  
  
  #------------------------------- Mortality % ------------------------#
  data4 
  Indian_Mortality = round((data4$deaths/data4$confirmed)*100,digits = 2)
  Indian_Mortality = sprintf("%3g%%", Indian_Mortality)
  
  
  #-----------------------------------------USA Analytics-----------------------------#
  
  data10 = filter(data2, Country=="US")
  
  data11 = filter(data3, Country=="US")
  
  
  #---------------------- Confirmed Cases--------------------------------#
  
  US_Confirmed = data10$confirmed%>%sum()%>%comma()
  
  #---------------------- Deaths Cases--------------------------------#
  
  US_Deaths = data10$deaths%>%sum()%>%comma()
  
  #----------------------- Recovered Cases-------------------------#
  
  US_Recovered = data10$recovered%>%sum()%>%comma()
  
  #----------------------- Active Cases----------------------------#
  
  Us_Active = data10$active%>%sum()%>%comma()
  
  US_Confirmed_Increase = (data10$confirmed - data11$confirmed)%>%comma()
  
  US_Deaths_Increase = (data10$deaths - data11$deaths)%>%comma()
  
  US_Recovered_Increase = (data10$recovered - data11$recovered)%>%comma()
  
  #------------------------------- Mortality % ------------------------#
   
  US_Mortality = round((data10$deaths/data10$confirmed)*100,digits = 2)
  US_Mortality = sprintf("%3g%%", US_Mortality)
  
  #--------------------------------------------- Forecasting ----------------------------------#
  
  
  #-------------------------------------Next 15 days Dates--------------------------------------#
  
  ds_dates = if (date1 == 1) {
    data.frame(Date = c(Sys.Date(),Sys.Date()+1,Sys.Date()+2,Sys.Date()+3,Sys.Date()+4,Sys.Date()+5,
                        Sys.Date()+6,Sys.Date()+7,Sys.Date()+8,Sys.Date()+9,Sys.Date()+10,Sys.Date()+11,Sys.Date()+12,Sys.Date()+13,Sys.Date()+14))
  } else {
    data.frame(Date = c(Sys.Date()-1,Sys.Date(),Sys.Date()+1,Sys.Date()+2,Sys.Date()+3,Sys.Date()+4,Sys.Date()+5,
                        Sys.Date()+6,Sys.Date()+7,Sys.Date()+8,Sys.Date()+9,Sys.Date()+10,Sys.Date()+11,Sys.Date()+12,Sys.Date()+13))
    
  }
  
  d = (data[1,"Date"])
  ds_date1 = c(d+1,d+2,d+3,d+4,d+5,d+6,+d+7,d+8,d+9,d+10,d+11,d+12,d+13,d+14,d+15)
  ds_date1 = t(ds_date1)
  #-------------------------------------Next 15 days Dates--------------------------------------#
   
  #------------------------------------ World Confirmed Case------------------------------------#
  
  df1 = data%>%group_by(Date)%>%summarise(confirmed = sum(confirmed),deaths=sum(deaths),recovered = sum(recovered))%>%arrange(Date)%>%select(Date,confirmed)
  
  data_ts1 = ts(df1$confirmed, start=c(2020, 1), end=c(2020,nrow(df1)), frequency= nrow(df1)) 
  
  model1 = auto.arima(data_ts1,trace = T) 
  
  future1 = forecast(model1, h = 15,level = 99)%>%data.frame()
  
  forecastshow1 = future1%>%select(-Point.Forecast) ################################ CI 99%
  
  forecastshow1  = round(forecastshow1)
  
  forecastshow1$Lo.99= comma(forecastshow1$Lo.99)
  
  forecastshow1$Hi.99= comma(forecastshow1$Hi.99)
  
  forecastshow1 = cbind(ds_date1,forecastshow1)  ################################ CI 99%
  
  
  future1[,c("Lo.99","Hi.99")] = list(NULL)
  
  forecast1 = cbind(ds_dates,future1)
  
  forecast1 = rename(forecast1, Date = Date, confirmed = Point.Forecast )
  
  fulldata1 = rbind(df1,forecast1)%>%data.frame()


plot1 = ggplot(fulldata1) +
    aes(x = Date, y = confirmed) +
    geom_line(size=1.25,colour = "#d8576b") +
    labs(x = "No. of Days", y = "Number of Confirmed Cases", subtitle = "Forecasting for next 15 Days")+
    ggthemes::theme_gdocs() +
    theme(legend.position = "none")
  plot1 # World Confirmed Case
  
  #--------------------------------------------- World Deaths Case---------------------------------#
  
  df2 = data%>%group_by(Date)%>%summarise(confirmed = sum(confirmed),deaths=sum(deaths),recovered = sum(recovered))%>%arrange(Date)%>%select(Date,deaths)
  
  data_ts2 = ts(df2$deaths, start=c(2020, 1), end=c(2020,nrow(df2)), frequency= nrow(df2)) 
  
  model2 = auto.arima(data_ts2,trace = T) 
  
  future2 = forecast(model2, h = 15,level=99)%>%data.frame()
  
  forecastshow2 = round(future2) ################################ CI 99%
  
  forecastshow2 = future2%>%select(-Point.Forecast) 
  
  forecastshow2  = round(forecastshow2)
  
  forecastshow2$Lo.99= comma(forecastshow2$Lo.99)
  
  forecastshow2$Hi.99= comma(forecastshow2$Hi.99)
  
  forecastshow2 = cbind(ds_dates,forecastshow2)  ################################ CI 99%
  
  
  future2[,c("Lo.99","Hi.99")] = list(NULL)
  
  forecast2 = cbind(ds_dates,future2)
  
  forecast2 = rename(forecast2,Date = Date, deaths = Point.Forecast )
  
  fulldata2 = rbind(df2,forecast2)%>%data.frame()
  
  plot2 =   ggplot(fulldata2) +
    aes(x = Date, y = deaths) +
    geom_line(size=1.25,colour = "#d8576b") +
    labs(x = "No. of Days", y = "Number of Death Cases", subtitle = "Forecasting for next 15 Days") +
    ggthemes::theme_gdocs() +
    theme(legend.position = "none")
  
  plot2 # World Deaths Case
  
  
  #-------------------------------------Indian Confirmed Case-------------------------------------------#
  
  df3 = filter(data, Country=="India")%>%select(Date,confirmed)%>%arrange(Date)
  
  data_ts3 = ts(df3$confirmed, start=c(2020, 1), end=c(2020,nrow(df3)), frequency= nrow(df3)) 
  
  model3 = auto.arima(data_ts3,trace = T) 
  
  future3 = forecast(model3, h = 15,level = 99)%>%data.frame()
  
  forecastshow3 = future3%>%select(-Point.Forecast) ############################### CI
  
  forecastshow3 = round(forecastshow3)
  
  forecastshow3$Lo.99= comma(forecastshow3$Lo.99)
  
  forecastshow3$Hi.99= comma(forecastshow3$Hi.99)
  
  forecastshow3 = cbind(ds_dates,forecastshow3)  ############################### CI
  
  
  future3[,c("Lo.99","Hi.99")] = list(NULL)
  
  forecast3 = cbind(ds_dates,future3)
  
  forecast3 = rename(forecast3,Date = Date, confirmed = Point.Forecast )
  
  fulldata3 = rbind(df3,forecast3)
  
  plot3 =   ggplot(fulldata3) +
    aes(x = Date, y = confirmed) +
    geom_line(size=1.25,colour = "#d8576b") +
    labs(x = "No. of Days", y = "Number of Confirmed Cases", subtitle = "Forecasting for next 15 Days") +
    ggthemes::theme_gdocs() +
    theme(legend.position = "none")
  
  plot3 # Indian Confirmed Case
  
  
  #---------------------------------------------Indian Deaths Case------------------------------------#
  
  df4 = filter(data, Country=="India")%>%select(Date,deaths)%>%arrange(Date)
  
  data_ts4 = ts(df4$deaths, start=c(2020, 1), end=c(2020,nrow(df4)), frequency= nrow(df4)) 
  
  model4 = auto.arima(data_ts4,trace = T) 
  
  future4 = forecast(model4, h = 15,level = 99)%>%data.frame()
  
  
  forecastshow4 = future4%>%select(-Point.Forecast) ############################### CI
  
  forecastshow4 = round(forecastshow4)
  
  forecastshow4$Lo.99= comma(forecastshow4$Lo.99)
  
  forecastshow4$Hi.99= comma(forecastshow4$Hi.99)
  
  forecastshow4 = cbind(ds_dates,forecastshow4)  ############################### CI
  
  future4[,c("Lo.99","Hi.99")] = list(NULL)
  
  forecast4 = cbind(ds_dates,future4)
  
  forecast4 = rename(forecast4,Date = Date, deaths = Point.Forecast )
  
  fulldata4 = rbind(df4,forecast4)
  
  plot4 =   ggplot(fulldata4) +
    aes(x = Date, y = deaths) +
    geom_line(size=1.25,colour = "#d8576b") +
    labs(x = "No. of Days", y = "Number of Death Cases", subtitle = "Forecasting for next 15 Days") +
    ggthemes::theme_gdocs() +
    theme(legend.position = "none")
  
  plot4 # Indian Deaths Case
  
  
  #-------------------------------------USA Confirmed Case-------------------------------------------#
  
  df5 = filter(data, Country=="US")%>%select(Date,confirmed)%>%arrange(Date)
  
  data_ts5 = ts(df5$confirmed, start=c(2020, 1), end=c(2020,nrow(df5)), frequency= nrow(df5)) 
  
  model5 = auto.arima(data_ts5,trace = T) 
  
  future5 = forecast(model5, h = 15,level = 99)%>%data.frame()
  
  
  forecastshow5 = future5%>%select(-Point.Forecast) ############################### CI
  
  forecastshow5 = round(forecastshow5)
  
  forecastshow5$Lo.99= comma(forecastshow5$Lo.99)
  
  forecastshow5$Hi.99= comma(forecastshow5$Hi.99)
  
  forecastshow5 = cbind(ds_dates,forecastshow5)  ############################### CI
  
  future5[,c("Lo.99","Hi.99")] = list(NULL)
  
  forecast5 = cbind(ds_dates,future5)
  
  forecast5 = rename(forecast5,Date = Date, confirmed = Point.Forecast )
  
  fulldata5 = rbind(df5,forecast5)
  
  plot5 =   ggplot(fulldata5) +
    aes(x = Date, y = confirmed) +
    geom_line(size=1.25,colour = "#d8576b") +
    labs(x = "No. of Days", y = "Number of Confirmed Cases", subtitle = "Forecasting for next 15 Days") +
    ggthemes::theme_gdocs() +
    theme(legend.position = "none")
  
  plot5 # US Confirmed Case
  
  
  #---------------------------------------------USA Deaths Case------------------------------------#
  
  df6 = filter(data, Country=="US")%>%select(Date,deaths)%>%arrange(Date)
  
  data_ts6 = ts(df6$deaths, start=c(2020, 1), end=c(2020,nrow(df6)), frequency= nrow(df6)) 
  
  model6 = auto.arima(data_ts6,trace = T) 
  
  future6 = forecast(model6, h = 15,level = 99)%>%data.frame()
  
  
  forecastshow6 = future6%>%select(-Point.Forecast) ############################### CI
  
  forecastshow6 = round(forecastshow6)
  
  forecastshow6$Lo.99= comma(forecastshow6$Lo.99)
  
  forecastshow6$Hi.99= comma(forecastshow6$Hi.99)
  
  forecastshow6 = cbind(ds_dates,forecastshow6)  ############################### CI
  
  future6[,c("Lo.99","Hi.99")] = list(NULL)
  
  forecast6 = cbind(ds_dates,future6)
  
  forecast6 = rename(forecast6,Date = Date, deaths = Point.Forecast )
  
  fulldata6 = rbind(df6,forecast6)
  
  plot6 =   ggplot(fulldata6) +
    aes(x = Date, y = deaths) +
    geom_line(size=1.25,colour = "#d8576b") +
    labs(x = "No. of Days", y = "Number of Death Cases", subtitle = "Forecasting for next 15 Days") +
    ggthemes::theme_gdocs() +
    theme(legend.position = "none")
  
  plot6 # US Deaths Case
  
  
  #------------------------------------------------------Calculation Ends--------------------------------------------------------------#  
  
  #---------------------------------------Server Outputs---------------------------------------#
  
  #-------------------------- For 1st tab ------------------------------#
  
  output$total_confirmed = renderText(total_confirmed)
  output$total_death = renderText(total_death)
  output$total_recovered = renderText(total_recovered)
  output$total_active = renderText(total_active)
  output$total_confirmed_inc = renderText(data_merged_conf_delta_total)
  output$total_death_inc = renderText(data_merged_deaths_delta_total)
  output$total_recovered_inc = renderText(data_merged_recovered_delta_total)
  output$mortality_overall = renderText(Mortality_Overall)
  output$forecaseting_confirmed_ww = renderPlot(plot1)
  output$forecaseting_deaths_ww = renderPlot(plot2)
  
  #------------------------------- For 2nd tab-----------------------------#
  
  output$top5confirmedno = renderTable(data_merged_conf_no, digits = 0)
  output$top5deathsno = renderTable(data_merged_deaths_no,digits = 0)
  output$top5recoveredno = renderTable(data_merged_recovered_no,digits = 0)
  output$top5activeno = renderTable(data_merged_active_no,digits = 0)
  output$top5confirmedper = renderTable(data_merged_conf_pr)
  output$top5deathsper = renderTable(data_merged_death_pr)
  output$top5recoveredper = renderTable(data_merged_recovered_inc_per)
  output$top5activeper = renderTable(data_merged_active_pr)
  
  
  #------------------------------- For 3rd tab-----------------------------#
  
  output$top5confirmed_day_no = renderTable(data_merged_conf_delta_no, digits = 0)
  output$top5deaths_day_no = renderTable(data_merged_deaths_delta_no,digits = 0)
  output$top5recovered_day_no = renderTable(data_merged_recovered_delta_no,digits = 0)
  output$top5confirmed_day_per = renderTable(data_merged_conf_inc_per)
  output$top5deaths_day_per = renderTable(data_merged_deaths_inc_per)
  output$top5recovered_day_per = renderTable(data_merged_recovered_inc_per)
  
  
  #-------------------------- For 4rd tab ------------------------------#
  
  output$indianconfirmed = renderText(Indian_Confirmed)
  output$indiandeaths = renderText(Indian_Deaths)
  output$indianrecovered = renderText(Indian_Recovered)
  output$indianactive = renderText(Indian_Active)
  output$indianconfirmed_inc = renderText(Indian_Confirmed_Increase)
  output$indiandeaths_inc = renderText(Indian_Deaths_Increase)
  output$indianrecovered_inc = renderText(Indian_Recovered_Increase)
  output$indianmortality = renderText(Indian_Mortality)
  output$forecaseting_confirmed_india = renderPlot(plot3)
  output$forecaseting_deaths_india = renderPlot(plot4)
  
  #-------------------------- For 5th tab ------------------------------#
  
  output$usconfirmed = renderText(US_Confirmed)
  output$usdeaths = renderText(US_Deaths)
  output$usrecovered = renderText(US_Recovered)
  output$usactive = renderText(Us_Active)
  output$usconfirmed_inc = renderText(US_Confirmed_Increase)
  output$usdeaths_inc = renderText(US_Deaths_Increase)
  output$usrecovered_inc = renderText(US_Recovered_Increase)
  output$usmortality = renderText(US_Mortality)
  output$forecaseting_confirmed_us = renderPlot(plot5)
  output$forecaseting_deaths_us = renderPlot(plot6)
  
  
  #-------------------------- For 6th tab ------------------------------#
  
  output$worldconfirmed_forecast = renderTable(forecastshow1)
  output$worlddeaths_forecast = renderTable(forecastshow2)
  output$indianconfirmed_forecast = renderTable(forecastshow3)
  output$indiandeaths_forecast = renderTable(forecastshow4)
  output$usconfirmed_forecast = renderTable(forecastshow5)
  output$usdeaths_forecast = renderTable(forecastshow6)
  
}

#-------------------------------------------------- End of Shiny Dashboard -------------------------------------------#
shinyApp(ui = ui, server = server)
