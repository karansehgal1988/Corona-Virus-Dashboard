options(scipen = 999)

library(dplyr)
library(scales)

url = "https://raw.githubusercontent.com/datasets/covid-19/master/data/time-series-19-covid-combined.csv"

data1 = read.csv(url)

str(data1)


data1$Date = lubridate::as_date(data1$Date)


data1[,c("Province.State","Lat","Long")] = list(NULL)

data1 = dplyr::arrange(data1,desc(Date))

data = data1%>%group_by(Date,Country.Region)%>%summarise(confirmed = sum(Confirmed),recovered = sum(Recovered),deaths=sum(Deaths))


data = dplyr::arrange(data,desc(Date))

data2 = data.frame(filter(data,Date==(Sys.Date()-2)))

data3 = data.frame(filter(data,Date==(Sys.Date()-3)))

data_merged = inner_join(data2,data3,by= "Country.Region")


data_merged$Date.y = NULL

#------------------ Difference from current date to Previous date ----------#

data_merged$Confirmed_delta = data_merged$confirmed.x - data_merged$confirmed.y

data_merged$Recovered_delta = data_merged$recovered.x - data_merged$recovered.y
  
data_merged$Deaths_delta =   data_merged$deaths.x - data_merged$deaths.y
  


#------------ Total Confimed Cases-----------#


total_confirmed = sum(data_merged$confirmed.x)

total_confirmed = comma(total_confirmed)

total_confirmed

#------------ Top 5 Countries Confirmed Cases No.------------#

data_merged3 = data_merged

data_merged3 = arrange(data_merged3, desc(confirmed.x))


data_merged_conf_no = data_merged3[1:5,c("Country.Region","confirmed.x")]

data_merged_conf_no

####------------ Top 5 Countries Confirmed Cases percentage.------------#


data_merged3$confirmed_Percentage = (round(data_merged3$confirmed.x/sum(data_merged3$confirmed.x),digits = 4))*100


data_merged_conf_pr = data_merged3[1:5,c("Country.Region","confirmed_Percentage")]

data_merged_conf_pr

#------------------- Top 5 ountries Confirmed delta----------------#


data_merged3 = arrange(data_merged3, desc(Confirmed_delta))

data_merged_conf_delta = data_merged3[1:5,c("Country.Region","Confirmed_delta")]

data_merged_conf_delta






#--------- Total Deaths Cases---------------#

total_death = sum(data_merged$deaths.x)

total_death = comma(total_death)

total_death

#--------------- Top 5 Countries Death Cases--------#

data_merged2 = data_merged

str(data_merged)

data_merged2$death_Percentage= (round(data_merged2$deaths.x/sum(data_merged2$deaths.x),digits = 4))*100



data_merged2 = arrange(data_merged2,desc(death_Percentage))

data_merged2 = data_merged2[1:5,]                       

data_merged2[,c("Date.x", "confirmed.x", "deaths.x","recovered.x", "confirmed.y","recovered.y" ,"deaths.Confirmed_delta", "Recovered_delta",
                "Deaths_delta","deaths.y", "Confirmed_delta")] = list(NULL)

data_merged2
data.frame(data_merged2)

#--------- Total Recovered Cases---------------#



total_recovered= sum(data_merged$recovered.x,na.rm = T)

total_recovered = comma(total_recovered)

total_recovered

#--------- Top 5 Countries Recovered Cases---------------#

data_merged4 = data_merged

data_merged4$confirmed_Percentage= (round(data_merged4$confirmed.x/sum(data_merged4$confirmed.x),digits = 4))*100


data_merged4 = arrange(data_merged4,desc(confirmed_Percentage))

data_merged4 = data_merged4[1:5,]

data_merged4[,c("Date.x", "confirmed.x", "deaths.x","recovered.x", "confirmed.y","recovered.y" ,"deaths.Confirmed_delta", "Recovered_delta",
                "Deaths_delta","deaths.y", "Confirmed_delta","death_Percentage")] = list(NULL)

data_merged4

#--------------------- Shiny Dashboard -------------------------#

library(shiny)
library(shinydashboard)
library(DT)
  
body = dashboardBody(
  fluidRow(
    box(title = "Total Confirmed", background= "blue",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;", textOutput("total_confirmed")),
    box(title = "Total Deaths", background= "red",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("total_death")),
    box(title = "Total Recovered", background= "green",solidHeader = T, width = 3, collapsible = T,style = "font-size: 300%;",textOutput("total_recovered"))    
        ),
  
  fluidRow(
    box(title = "Top5 Confirmed Countries (No.)", background= "black",solidHeader = T, width = 3, collapsible = T,style = "font-size: 100%;",tableOutput("top5confirmedno"))      
  
  ),
  
  fluidRow(
    box(title = "Top5 Confirmed Countries (%)", background= "black",solidHeader = T, width = 3, collapsible = T,style = "font-size: 100%;",tableOutput("top5confirmedper"))       
      
   ),

  fluidRow(
)
)


ui <- dashboardPage(
  dashboardHeader(title = "Coronavirus Status Dashboard"),
  dashboardSidebar(disable = T),
  body
)



# Preview the UI in the console
shinyApp(ui = ui, server = function(input, output) { 
  
  output$total_confirmed = renderText(total_confirmed)
  output$total_death = renderText(total_death)
  output$total_recovered = renderText(total_recovered)
  output$top5confirmedno = renderTable(data_merged_conf_no)
  output$top5confirmedper = renderTable(data_merged_conf_pr)
  })

#-------------------------------------------#



